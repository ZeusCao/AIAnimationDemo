%!PS-Adobe-3.0 EPSF-3.0
%%For: admin
%%CreationDate: Mon Dec 12 22:05:41 2016
%%Title: generated by sK1
%%Creator: sK1 1.1.5
%%Pages: 1
%%BoundingBox: 4 21 86 69
%%Extensions: CMYK
%%DocumentSuppliedResources: (atend)
%%EndComments

%%BeginProlog
%%BeginResource: procset Linux-sK-Procset 1.0 2
/SketchDict 100 dict def
SketchDict begin
/bd { bind def } bind def
/x { exch } bd
/xd { exch def } bd
/PI 3.14159265358979323846264338327 def
/radgrad { 180 mul PI div } bd
/skstartmatrix matrix currentmatrix def
/tmpmat matrix def
/ISOLatin1Encoding dup where
{ pop pop }
{  [/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /minus /period
/slash /zero /one /two /three /four /five /six /seven /eight /nine /colon
/semicolon /less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J
/K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h /i
/j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /dotlessi /grave /acute /circumflex /tilde /macron /breve
/dotaccent /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek
/caron /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
/registered /macron /degree /plusminus /twosuperior /threesuperior /acute /mu
/paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown /Agrave /Aacute /Acircumflex
/Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute /Ecircumflex
/Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde /Ograve
/Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute
/Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute
/acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute
/ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
/ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] def
}
ifelse
/arct dup where
{pop pop}
{
/arct {arcto pop pop pop pop} bd
}
ifelse
/size 0 def
/fontname 0 def
/newfont 0 def
/sf {
/size xd
/fontname xd
fontname findfont
dup /Encoding get StandardEncoding eq
{
dup
length dict /newfont xd
{
1 index
/FID ne
{ newfont 3 1 roll put }
{ pop pop }
ifelse
} forall
newfont /Encoding ISOLatin1Encoding put
fontname newfont definefont
}
if
size scalefont setfont
} bd
/pusht {matrix currentmatrix} bd
/popt {setmatrix} bd
/pushc {gsave} bd
/popc {grestore} bd
/rgb {setrgbcolor} bd
/cmyk {setcmykcolor} bd
/w { setlinewidth } bd
/j { setlinejoin } bd
/J { setlinecap } bd
/d { setdash } bd
/F { eofill } bd
/f { closepath F } bd
/S {
pusht
skstartmatrix setmatrix stroke 
popt
} bd
/s { closepath S } bd
/m { moveto } bd
/l { lineto } bd
/c { curveto } bd
/txt {
/tmpmat tmpmat currentmatrix def
dup type /arraytype eq {concat} {translate} ifelse
0 0 m
tmpmat
} bd
/T {txt x show popt} bd
/P {txt x true charpath popt} bd
/TP {txt x dup show 0 0 m true charpath popt} bd
/C {newpath 0 360 arc} bd
/R {
2 copy m
x 2 index l
x 2 index x l
l
closepath
} bd
/ellipse { 
dup type /arraytype eq
{
pusht x concat
0 0 1.0 C 
popt
}	
{
pusht 5 1 roll
4 -1 roll concat
newpath
dup 2 eq {
0 0 m 
} if 
3 1 roll
radgrad x
radgrad x
0 0 1   5 -2 roll
arc
0 ne { closepath } if
popt
}
ifelse
} bd
/radius1 0 def
/radius2 0 def
/factor 0 def
/rect {
dup type /arraytype eq
{
pusht x concat
0 0 m  1 0 l  1 1 l  0 1 l  closepath
popt
}
{
/radius2 xd
/radius1 xd
pusht x concat
radius1 radius2 div  1  scale
0 radius2 m
0 1  radius2 1  radius2  arct
radius2 radius1 div
dup 1  1 index 0  radius2  arct
0  0 0  radius2  arct
0 0  0 1  radius2 arct
closepath
popt
}
ifelse
} bd
/buf 0 def
/width 0 def
/height 0 def
/skcimg {
/tmpmat tmpmat currentmatrix def
{ concat } if
/height xd
/width xd
/buf width 3 mul string def
width height scale
width height 8
[width	 0   0	 height neg	  0  height]
{ currentfile buf readhexstring pop } bind
false 3 colorimage
tmpmat setmatrix
} bd
/skgimg {
/tmpmat tmpmat currentmatrix def
{ concat } if
/height xd
/width xd
/buf width string def
width height scale
width height 8
[width	 0   0	 height neg	  0  height]
{ currentfile buf readhexstring pop } bind
image
tmpmat setmatrix
} bd
/rclip {
4 2 roll m
dup 0 x rlineto
x 0 rlineto
neg 0 x rlineto
closepath
clip
} bd
/skeps {
10 dict begin
/sk_state save def
concat
3 index neg 3 index neg translate
rclip
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
10 setmiterlimit [ ] 0 setdash
newpath
/sk_dict_count countdictstack def
/sk_count count 1 sub def
userdict begin
/showpage { } def
/languagelevel where
{
pop
languagelevel 1 ne
{
false setstrokeadjust
false setoverprint
} if
} if
} bd 
/skepsend {
count sk_count sub { pop } repeat
countdictstack sk_dict_count sub { end } repeat
sk_state restore
end
} bd
/gradidx 0 def
/gradient { 
3 mul array
/gradidx 0 def
} bd
/$ {
3 index gradidx       5 -1 roll put 
2 index gradidx 1 add 4 -1 roll put 
1 index gradidx 2 add 3 -1 roll put 
/gradidx gradidx 3 add def
} bd
/! { 
3 
{
dup dup gradidx dup 3 1 roll 3 sub get put
/gradidx gradidx 1 add def
}
repeat
} bd
/gradcolor {
3 mul dup 2 add 1 exch	% idx  1  idx+2
{
1 index exch	% array array i
get		% array component
exch		% component array
}
for
4 1 roll
} bd
/x0 0 def /y0 0 def /x1 0 def /y1 0 def
/left 0 def /right 0 def /top 0 def /bottom 0 def
/numcolors 0 def
/axial	{
/y1 xd /x1 xd /y0 xd /x0 xd
dup length 3 idiv /numcolors xd
pusht exch  % ctm array
x0 x1 ne y0 y1 ne or
{
x0 y0 translate
[x1 x0 sub  y1 y0 sub	dup neg    2 index    0	    0] concat
clippath flattenpath pathbbox
/top xd /right xd /bottom xd /left xd
newpath
0 gradcolor rgb clippath f
0 1 numcolors 1 sub
{
dup numcolors div
3 1 roll
gradcolor rgb
exch
bottom right top R f
}
for
}
if 
pop
popt
} bd
/r0 0 def /r1 0 def /dr 0 def
/radial	{
/r1 xd /r0 xd /y0 xd /x0 xd
/dr r1 r0 sub def
dup length 3 idiv /numcolors xd
pusht exch  % ctm array
r0 r1 ne
{
x0 y0 translate
clippath flattenpath pathbbox
/top xd /right xd /bottom xd /left xd
newpath
dr 0 gt {numcolors 1 sub}{0} ifelse gradcolor rgb
clippath f
dr 0 gt {numcolors 1 sub -1 0} { 0 1 numcolors 1 sub} ifelse
{
dup numcolors div dr mul r0 add
3 1 roll
gradcolor rgb
exch
0 0 3 -1 roll C f
}
for
}
if 
pop
popt
} bd
/max {
2 copy lt {exch} if pop
} bd
/conical {
pusht 5 1 roll
3 1 roll /y0 xd /x0 xd
x0 y0 translate
radgrad rotate
dup length 3 idiv /numcolors xd
clippath flattenpath pathbbox newpath
4 { abs 4 1 roll} repeat
3 { max } repeat
2 mul
dup scale
0 gradcolor rgb
0 0 1 0 360 arc f
1 1 numcolors 1 sub
{
dup numcolors div 180 mul
3 1 roll
gradcolor rgb
exch
0 0 moveto
0 0 1  4 -1 roll  dup neg  arc
closepath f
}
for
pop
popt
} bd
/XStep 0 def /YStep 0 def /imagedata 0 def /components 0 def
/tileimage2 {
exch 4 2 roll
/height xd
/width xd
mark
/components 2 index
/PatternType 1
/PaintType 1
/TilingType 1
/BBox [0 0 width height]
/XStep width
/YStep height
/PaintProc {
begin
XStep YStep 8
matrix
imagedata
false
components
colorimage
end
}
counttomark 2 div cvi dup dict begin
{ def } repeat
pop currentdict end
dup
/imagedata
4 -1 roll
width height mul mul string
currentfile exch readhexstring pop
put
exch
makepattern
setpattern
clippath
eofill
} bd
/tileimage1 {
concat
/components xd
/height xd
/width xd
/imagedata
currentfile
width height mul components mul string
readhexstring pop
def
clippath flattenpath pathbbox
/top xd /right xd /bottom xd /left xd
left width div floor width mul
bottom height div floor height mul
translate
top bottom sub height div ceiling cvi
{
gsave
right left sub width div ceiling cvi
{
width height 8 matrix
components 1 eq
{
{ imagedata }
image
}
{
imagedata
false components
colorimage
}
ifelse
width 0 translate
}
repeat
grestore
0 height translate
}
repeat
} bd
/makepattern where
{
pop
/tileimage /tileimage2 load def
}
{
/tileimage /tileimage1 load def
}
ifelse
end
%%EndResource
%%EndProlog

%%BeginSetup

10.433 setmiterlimit
%%EndSetup

%%Page: 1 1
SketchDict begin
newpath
84.2667 62.3921 m
83.4876 64.7301 82.2348 66.4727 80.544 67.5717 c
80.3162 67.7198 l
80.0638 67.8205 l
78.9369 68.2712 77.856 68.4998 76.8512 68.4998 c
76.7602 68.4998 76.6682 68.4981 76.5781 68.4941 c
75.3975 68.4444 74.2419 68.0694 73.1399 67.3802 c
72.2904 66.8501 71.6295 66.3627 71.1212 65.8927 c
70.7114 65.5145 70.3864 65.2045 70.1296 64.9473 c
69.9388 64.7555 l
69.7884 64.5309 l
69.7845 64.5251 69.6925 64.3888 69.3672 63.9983 c
68.0309 62.4401 66.9576 61.2545 66.1779 60.4749 c
65.4061 59.7036 64.3191 58.742 62.9478 57.6168 c
61.7763 56.6563 60.5319 55.9602 59.2501 55.5483 c
57.9094 55.1173 56.4109 54.8988 54.7953 54.8988 c
52.7972 54.8988 l
45.4003 54.8988 l
38.2023 54.8988 l
36.1168 54.8988 l
34.8527 54.8988 33.5922 55.101 32.3708 55.5003 c
31.0199 55.9423 29.9089 56.3917 29.0689 56.8366 c
28.5496 57.111 27.6328 57.7239 26.2112 59.0845 c
24.6241 60.6025 23.9277 61.3267 23.6225 61.6674 c
23.1533 62.1921 22.2735 63.2112 21.0083 64.6963 c
20.227 65.7692 19.0331 66.733 17.3657 67.6392 c
16.2796 68.2298 15.1342 68.5293 13.961 68.5293 c
12.8648 68.5293 11.7602 68.2654 10.6775 67.7453 c
10.4744 67.6476 l
10.2893 67.5184 l
8.63977 66.3636 7.41396 64.6096 6.64567 62.3051 c
5.9655 60.2643 5.63476 57.8185 5.63476 54.8277 c
5.63476 54.5673 l
5.63476 54.4802 l
5.63476 48.3114 l
5.63476 33.0585 l
5.63476 32.1893 l
5.63476 32.1188 l
5.63823 32.0482 l
5.79088 29.0698 6.57084 26.895 8.0234 25.3987 c
9.44097 23.938 11.3753 23.0752 13.7719 22.8356 c
13.9197 22.8206 l
14.0678 22.8219 l
14.2357 22.8228 14.3571 22.8277 14.4458 22.8308 c
14.4972 22.8329 14.5273 22.8339 14.5465 22.8339 c
14.5738 22.8339 14.6204 22.832 14.6815 22.8277 c
14.773 22.8219 l
14.8649 22.8219 l
76.0974 22.8219 l
76.184 22.8219 l
76.2706 22.8273 l
76.3339 22.8312 76.3858 22.833 76.4289 22.833 c
76.4654 22.833 76.5015 22.8318 76.5674 22.8295 c
76.6615 22.8259 76.7781 22.8216 76.9284 22.8216 c
76.9636 22.822 l
77.0916 22.8226 l
77.2191 22.8349 l
79.7092 23.0766 81.6655 23.9606 83.0349 25.4613 c
84.3897 26.9507 85.1214 29.104 85.2739 32.0469 c
85.2774 32.1183 l
85.2774 32.1898 l
85.2774 33.0587 l
85.2774 48.3115 l
85.2774 54.4801 l
85.2774 54.5672 l
85.2774 54.8276 l
85.2777 57.8771 84.947 60.3514 84.2667 62.3921 c
84.2667 62.3921 l
82.5131 54.5672 m
82.5131 54.4801 l
82.5131 48.3113 l
82.5131 33.0584 l
82.5131 32.1892 l
82.3962 29.9303 81.8887 28.3091 80.9926 27.324 c
80.0942 26.339 78.7477 25.7604 76.952 25.5858 c
76.944 25.5858 76.9365 25.5858 76.9286 25.5858 c
76.7334 25.5858 76.6103 25.5973 76.4292 25.5973 c
76.3386 25.5973 76.2335 25.5947 76.0975 25.5858 c
14.8651 25.5858 l
14.7266 25.5951 14.6297 25.5983 14.5467 25.5983 c
14.3933 25.5983 14.2861 25.5876 14.0475 25.5858 c
12.3098 25.76 10.963 26.3391 10.0075 27.324 c
9.05107 28.3091 8.51509 29.9303 8.39943 32.1892 c
8.39943 33.0584 l
8.39943 48.3113 l
8.39943 54.4801 l
8.39943 54.5672 l
8.39943 54.8276 l
8.39943 60.1561 9.55844 63.6317 11.875 65.2537 c
12.5841 65.5944 13.2794 65.7646 13.961 65.7646 c
14.6707 65.7646 15.3659 65.5794 16.0457 65.2101 c
17.378 64.4859 18.3051 63.7476 18.8266 62.9944 c
20.1585 61.4307 21.0708 60.3735 21.5629 59.8231 c
22.0554 59.2729 22.9674 58.3609 24.2999 57.0867 c
25.6322 55.8119 26.7909 54.914 27.7754 54.3929 c
28.7609 53.8715 30.006 53.365 31.5121 52.8725 c
33.0177 52.3803 34.5533 52.1337 36.1168 52.1337 c
38.2024 52.1337 l
45.4004 52.1337 l
52.7973 52.1337 l
54.7953 52.1337 l
56.7073 52.1337 58.474 52.3944 60.0962 52.9159 c
61.7175 53.4371 63.253 54.2918 64.7013 55.4791 c
66.149 56.6669 67.2931 57.6803 68.133 58.5198 c
68.9733 59.36 70.088 60.5913 71.4779 62.2126 c
71.7681 62.5604 71.9708 62.8211 72.0865 62.9945 c
72.3182 63.2266 72.6225 63.5159 72.9985 63.8633 c
73.3749 64.2112 73.9105 64.602 74.6061 65.036 c
75.3009 65.471 75.997 65.7027 76.6913 65.7317 c
76.7441 65.7339 76.7973 65.7353 76.8514 65.7353 c
77.5057 65.7353 78.2344 65.5747 79.0377 65.2538 c
81.3546 63.7478 82.5132 60.2722 82.5132 54.8276 c
82.5132 54.5672 l
82.5131 54.5672 l
82.5131 54.5672 m
closepath
0 0 0 rgb
F
%%PageTrailer
showpage
%%Trailer
end
%%DocumentSuppliedResources: procset Linux-sK-Procset 1.0 2
%%EOF
